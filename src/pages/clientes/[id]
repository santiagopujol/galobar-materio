import { useAppContext } from '../../utils/context';
import { useEffect } from 'react';
import ClientesTabCards from '../../components/Clientes/ClientesTabCards';
import ClientesTabButtons from '../../components/Clientes/ClientesTabButtons';
import customStyles from '../../styles/custom.module.css';
import { GetServerSideProps } from 'next';
import { MailchimpService } from '../../services/MailchimpService';
import { PuntosService } from '../../services/PuntosService'

//Backend Renderiza data de cliente por hash de url
export const getServerSideProps: GetServerSideProps = async (context) => {

  // Buscar info de cliente
  const dataCliente = await MailchimpService.getMemberMailchimp(context.query.id);

  //Get data puntos de la base y pasarlo al componente de puntos
  // ...

  return {
    props: {
      dataCliente: JSON.parse(dataCliente),
      // dataOperaciones
    },
  };
}

export default function DetalleCliente({ dataCliente }: { dataCliente: any }) {

  const {
    setLoadingState,
    setHeaderComponentState,
    setActiveTabDetalleClientes
  } = useAppContext();

  // const [dataPuntosCliente, setDataPuntoscliente] = useState({});

  // const getPuntosCliente = () => {
  //   getPuntosByClienteFirestore(dataCliente.id).then((result) => {
  //     // console.log(result);
  //     setDataPuntoscliente(result[0]);
  //   });
  //   // return JSON.stringify(dataOperaciones)
  // };

  useEffect(() => {
    console.log(dataCliente)
    setHeaderComponentState({
      open: true,
      activeIconArrow: true,
      currentPageTitle: 
        dataCliente.merge_fields.FNAME != "" ? 
          (dataCliente.merge_fields.FNAME.toUpperCase() + " " + dataCliente.merge_fields.LNAME.toUpperCase()) 
        : dataCliente.email_address,
      prevComponentUrl: '/clientes',
      activeLogo: false,
    });
    setLoadingState(false);
    setActiveTabDetalleClientes("submenu-tab-clientes-detalle")
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <>
      <div className="pt-12 pb-3">
        <ul
          id="myTab"
          data-tabs-toggle="#myTabContent"
          className={`text-xl font-medium fixed text-center text-gray-500 bg-white
            divide-gray-200 shadow flex dark:divide-gray-700 dark:text-gray-400 
            w-full z-[75] ${customStyles.font_app} ${customStyles.col_secondary_app} `}
        >
          <ClientesTabButtons />
        </ul>
        <div className="mb-4">
          <div className="tab-content mx-3 mb-4 pt-12" id="submenu-tab-clientes">
            <ClientesTabCards dataCliente={dataCliente} />
          </div>
        </div>
      </div>
    </>
  );
}
